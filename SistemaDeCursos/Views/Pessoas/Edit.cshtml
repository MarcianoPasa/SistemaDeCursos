@model SistemaDeCursos.Models.Pessoas

@{
    ViewBag.Title = "Editar Pessoa";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group form-group-titulos">
            <div class="col-md-offset-2 col-md-10">
                <h4>Editando Pessoa</h4>
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.pessoa_id)

        <div class="form-group">
            @Html.LabelFor(model => model.pessoa_nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pessoa_nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pessoa_nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.data_nascimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.data_nascimento, new { htmlAttributes = new { @class = "form-control-campos-pequenos" } })
                @Html.ValidationMessageFor(model => model.data_nascimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sexo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.sexo, (SelectList)ViewBag.ItemsSelect, new { @class = "form-control-campos-pequenos" })
                @Html.ValidationMessageFor(model => model.sexo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefone_fixo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefone_fixo, new { htmlAttributes = new { @class = "form-control-campos-pequenos" } })
                @Html.ValidationMessageFor(model => model.telefone_fixo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefone_movel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefone_movel, new { htmlAttributes = new { @class = "form-control-campos-pequenos" } })
                @Html.ValidationMessageFor(model => model.telefone_movel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.observacoes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.observacoes, new { htmlAttributes = new { @class = "form-control-campos-texto" } })
                @Html.ValidationMessageFor(model => model.observacoes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="btn-toolbar" role="toolbar">
                    <div class="btn-group mr-2" role="group">
                        <input type="submit" value="Salvar" class="btn botaoPadrao" />
                    </div>
                    <div class="btn-group mr-2" role="group">
                        <input type="button" value="Cancelar" class="btn botaoPadraoVermelho" onclick="location.href='@Url.Action("Index", "Pessoas")'" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $("input[type=text]").first().focus();

            $("#telefone_fixo").inputmask("mask", { "mask": "(99) 9999-9999" });
            $("#telefone_movel").inputmask("mask", { "mask": "(99) 99999-9999" });

            $("#telefone_movel").focusin(function () {
                $("#telefone_movel").inputmask("mask", { "mask": "(99) 99999-9999" });
            });

            $("#telefone_movel").focusout(function () {
                var telefone = $('#telefone_movel').val();
                var telefoneNovo = telefone.replace(/_/g, "");

                if (telefoneNovo.trim().length <= 14) {
                    $("#telefone_movel").inputmask("mask", { "mask": "(99) 9999-9999" });
                }
                else {
                    $("#telefone_movel").inputmask("mask", { "mask": "(99) 99999-9999" });
                }
            });
        });
    </script>
}
